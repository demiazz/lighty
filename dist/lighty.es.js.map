{"version":3,"file":null,"sources":["../src/builder.js","../src/query-selector.js","../src/application.js","../src/plugin.js","../src/index.js"],"sourcesContent":["/**\n * Provides Builder class.\n *\n * @module builder\n *\n * @protected\n * @since 0.2.0\n */\n\n\n/**\n * Creates {@link ComponentPrototype}'s instances for elements in specified tree.\n *\n * @property {Number} id - unique identificator.\n * @property {Selector} selector - CSS selector for searching elements.\n * @property {ComponentPrototype} proto - components' prototype.\n * @property {Array.<module:plugin~Plugin>} plugins - list of plugins.\n * @property {QuerySelector} querySelector - function for search elements in a tree.\n *\n * @protected\n * @since 0.2.0\n */\nclass Builder {\n  /**\n   * Creates a builder instance.\n   *\n   * @param {Number} id - unique identificator.\n   * @param {Selector} selector - CSS selector for searching elements.\n   * @param {ComponentPrototype} proto - components' prototype.\n   * @param {Array.<module:plugin~Plugin>} plugins - list of plugins.\n   * @param {QuerySelector} querySelector - function for search elements in a tree.\n   */\n  constructor(id, selector, proto, plugins, querySelector) {\n    this.id = id;\n    this.selector = selector;\n    this.proto = proto;\n    this.plugins = plugins;\n    this.querySelector = querySelector;\n  }\n\n  /**\n   * Search elements in specified tree. Creates {@link Component}'s instance\n   * for each element (if not has been set up early). And generate\n   * initialization function, which calls {@link ComponentInitFn} for each\n   * created component, if a component has a {@link ComponentInitFn}.\n   *\n   * @param {Tree} [tree = document.body] - specified tree.\n   *\n   * @return {InitializerFn} initialization function.\n   *\n   * @protected\n   * @since 0.2.0\n   */\n  getInitializer(tree = document.body) {\n    const elements = this.querySelector(tree, this.selector);\n\n    const components = elements.reduce((cs, element) => {\n      if (this.checkAndUpdateCache(element)) {\n        cs.push(this.createComponent(element));\n      }\n\n      return cs;\n    }, []);\n\n    return function initializer() {\n      components.forEach((component) => {\n        if (!component.init) {\n          return;\n        }\n\n        component.init();\n      });\n    };\n  }\n\n  /**\n   * Creates {@link Component}'s instance and applies plugins to them.\n   *\n   * @param {external:Element} element - specified element.\n   *\n   * @return {Component} created {@link Component}'s instance.\n   *\n   * @private\n   * @since 0.2.0\n   */\n  createComponent(element) {\n    const component = Object.keys(this.proto).reduce((instance, property) => {\n      instance[property] = this.proto[property];\n\n      return instance;\n    }, { });\n\n    this.transformComponent(component, element);\n\n    return component;\n  }\n\n  /**\n   * Checks have been created a component for specified element. Update meta\n   * information about linked components if not.\n   *\n   * @param {external:Element} element - specified element.\n   *\n   * @return {Boolean} `true` if component isn't has been created; otherwise\n   * returns `false`.\n   *\n   * @private\n   * @since 0.2.0\n   */\n  checkAndUpdateCache(element) {\n    if (element.ids && element.ids.indexOf(this.id) !== -1) {\n      return false;\n    }\n\n    element.ids = element.ids ? element.ids.concat(this.id) : [this.id];\n\n    return true;\n  }\n\n  /**\n   * Applies plugins to specified component and element one by one.\n   *\n   * @param {Component} component - component which will be transformed.\n   * @param {external:Element} element - element which associated\n   * with the component.\n   *\n   * @return {void} nothing.\n   *\n   * @private\n   * @since 0.2.0\n   */\n  transformComponent(component, element) {\n    this.plugins.forEach((plugin) => {\n      plugin.transform(component, element);\n    });\n  }\n}\n\n\nexport default Builder;\n","/**\n * Provides utilities to work with the search for `DOM` tree.\n *\n * @module query-selector\n *\n * @protected\n * @since 0.4.0\n */\n\n\n/**\n * Extracts {@link external:MatchesFn} method from `DOM API`.\n *\n * Uses workaround for vendor prefixed methods in old browsers.\n *\n * @example\n *\n * <div class=\"element\"><div>\n *\n * @example\n *\n * const element = document.querySelector('.element');\n * const matchesFn = getMatchesFn();\n *\n * matchesFn.call(element, '.element'); // => true\n * matchesFn.call(element, '.not-element'); // => false\n *\n * @return {external:MatchesFn} extracted {@link external:MatchesFn} method.\n *\n * @private\n * @since 0.4.0\n */\nfunction getMatchesFn() {\n  const e = document.documentElement;\n\n  return (\n    e.matches ||\n    e.matchesSelector ||\n    e.msMatchesSelector ||\n    e.mozMatchesSelector ||\n    e.webkitMatchesSelector ||\n    e.oMatchesSelector\n  );\n}\n\n/**\n * {@link external:MatchesFn} extracted from `DOM API`.\n *\n * @example\n *\n * <div class=\"element\"><div>\n *\n * @example\n *\n * const element = document.querySelector('.element');\n *\n * matchesFn.call(element, '.element'); // => true\n * matchesFn.call(element, '.not-element'); // => false\n *\n * @type external:MatchesFn\n *\n * @private\n * @since 0.4.0\n */\nconst matchesFn = getMatchesFn();\n\n/**\n * Wrapper around {@link matchesFn}.\n *\n * @example\n *\n * <div class=\"element\"><div>\n *\n * @example\n *\n * const element = document.querySelector('.element');\n *\n * matches(element, '.element'); // => true\n * matches(element, '.not-element'); // => false\n *\n * @param {external:Element} element - element to test.\n * @param {Selector} selector - CSS selector to test.\n *\n * @return {Boolean} `true` if the specified selector would select the element;\n * otherwise, returns `false`.\n *\n * @private\n * @since 0.4.0\n */\nfunction matches(element, selector) {\n  return matchesFn.call(element, selector);\n}\n\n/**\n * Creates new array with all items that is a {@link external:Element}'s\n * instances.\n *\n * @param {Array.<*>} nodes - items.\n *\n * @return {Array.<external:Element>} filtered array.\n *\n * @private\n * @since 0.5.0\n */\nfunction filterElements(elements) {\n  return elements.filter(element => element instanceof Element);\n}\n\n/**\n * Selects all elements by selector inside given tree (includes tree self too).\n *\n * @example\n *\n * <div class=\"tree\">\n *   <div class=\"leaf\">\n *   <div class=\"leaf\">\n * </div>\n *\n * @example\n *\n * querySelector('.tree', '.leaf'); // => [<.leaf>, <.leaf>]\n *\n * @example\n *\n * querySelector('.tree', '.tree, .leaf'); // => [<.tree>, <.leaf>, <.leaf>]\n *\n * @example\n *\n * const tree = document.querySelector('.tree');\n *\n * querySelector(tree, '.leaf') // => [<.leaf>, <.leaf>]\n *\n * @example\n *\n * const tree = document.querySelectorAll('.tree');\n *\n * querySelector(tree, '.leaf') // => [<.leaf>, <.leaf>]\n *\n * @example\n *\n * const tree = [document.querySelector('.tree')];\n *\n * querySelector(tree, '.leaf') // => [<.leaf>, <.leaf>]\n *\n * @example\n *\n * const tree = $('.tree');\n *\n * querySelector(tree, '.leaf') // => [<.leaf>, <.leaf>]\n *\n * @param {Tree} tree - tree inside of which will be searched for elements.\n * @param {Selector} selector - valid CSS selector.\n *\n * @return {external:Element[]} elements selected by specified selector.\n *\n * @protected\n * @since 0.4.0\n */\nfunction querySelector(tree, selector) {\n  if (tree.jquery) {\n    return tree.filter(selector).add(tree.find(selector)).toArray();\n  }\n\n  let roots = [];\n\n  if (tree instanceof Element) {\n    roots = [tree];\n  } else if (tree instanceof NodeList) {\n    roots = filterElements([].slice.call(tree));\n  } else if (Array.isArray(tree)) {\n    roots = filterElements(tree);\n  } else if (typeof tree === 'string') {\n    roots = [].slice.call(document.querySelectorAll(tree));\n  }\n\n  return roots.reduce((elements, root) => {\n    if (matches(root, selector)) {\n      elements.push(root);\n    }\n\n    return elements.concat(\n      [].slice.call(root.querySelectorAll(selector))\n    );\n  }, []);\n}\n\n\nexport default querySelector;\n","/**\n * Provides Application class.\n *\n * @module application\n *\n * @protected\n * @since 0.2.0\n */\n\nimport Builder from './builder';\nimport querySelector from './query-selector';\n\n\n/**\n * Creates an application and start them immediately or when a document\n * will be loaded.\n *\n * @property {Array.<module:builder~Builder>} builders - list of builders.\n * @property {Boolean} isRunning - flag which indicates application running or not.\n * @property {QuerySelector} querySelector - query selector used by application.\n * @property {Array.<module:plugin~Plugin>} plugins - list of plugins.\n *\n * @public\n * @since 0.2.0\n */\nclass Application {\n  /**\n   * Creates an application instance.\n   *\n   * @param {ApplicationOptions} [options = { }] - options object.\n   */\n  constructor(options = { }) {\n    this.builders = [];\n    this.isRunning = false;\n\n    // Query selector\n\n    this.querySelector = options.querySelector || querySelector;\n\n    // Plugins\n\n    this.plugins = [];\n\n    if (options.plugins) {\n      this.plugins = options.plugins.map((plugin) => {\n        if (plugin instanceof Function) {\n          return plugin();\n        }\n\n        return plugin;\n      });\n    }\n\n    // Running\n\n    if (document.readyState !== 'loading') {\n      // See https://connect.microsoft.com/IE/feedback/details/792880/document-readystat\n      setTimeout(this.start.bind(this), 1);\n    } else {\n      document.addEventListener('DOMContentLoaded', this.start.bind(this));\n    }\n  }\n\n  /**\n   * Creates {@link module:builder~Builder} instance for specified selector\n   * and prototype, and register them inside of application.\n   *\n   * Creates the {@link ComponentPrototype}'s instances for all suitable\n   * components on a page if application already running.\n   *\n   * @param {Selector} selector - specified CSS selector.\n   * @param {ComponentPrototype} proto - specified prototype.\n   *\n   * @return {Void} nothing.\n   *\n   * @public\n   * @since 0.2.0\n   */\n  component(selector, proto) {\n    const id = this.builders.length;\n    const builder = new Builder(\n      id, selector, proto, this.plugins, this.querySelector\n    );\n\n    this.builders.push(builder);\n\n    if (this.isRunning) {\n      const initializer = builder.getInitializer();\n\n      initializer();\n    }\n  }\n\n  /**\n   * Creates components through all registered {@link module:builder~Builder}s\n   * for all elements inside specified tree.\n   *\n   * @param {Tree} tree - specified tree.\n   *\n   * @return {Void} nothing.\n   *\n   * @public\n   * @since 0.2.0\n   */\n  vitalize(tree) {\n    this.builders.forEach((builder) => {\n      const initialize = builder.getInitializer(tree);\n\n      initialize();\n    });\n  }\n\n  /**\n   * Sets `isRunning` flag to true and vitalizes all elements on a page.\n   *\n   * @return {Void} nothing.\n   *\n   * @private\n   * @since 0.2.0\n   */\n  start() {\n    this.isRunning = true;\n\n    this.vitalize();\n  }\n}\n\n\nexport default Application;\n","/**\n * Provides Plugin class.\n *\n * @module plugin\n *\n * @protected\n * @since 0.2.0\n */\n\n\n/**\n * Plugin keeps self name and transformation function.\n *\n * It's is a simple structure now, but in future may be extended for\n * providing additional functionality.\n *\n * @property {String} name - plugin's name.\n * @property {TransformerFn} transformer - transformation function.\n *\n * @protected\n * @since 0.2.0\n */\nclass Plugin {\n  /**\n   * Creates a plugin instance.\n   *\n   * @param {String} name - plugin's name.\n   * @param {TransformerFn} transformer - transformation function.\n   */\n  constructor(name, transformer) {\n    this.name = name;\n    this.transformer = transformer;\n  }\n\n  /**\n   * Applies transformation function to component instance and\n   * HTML element.\n   *\n   * @param {Component} component - component which will be transformed.\n   * @param {external:Element} element - element which associated\n   * with the component.\n   *\n   * @return {void} nothing.\n   *\n   * @since 0.2.0\n   */\n  transform(component, element) {\n    this.transformer(component, element);\n  }\n}\n\n\nexport default Plugin;\n","/**\n * Provides public API.\n *\n * @module index\n *\n * @public\n */\n\nimport Application from './application';\nimport Plugin from './plugin';\nimport querySelector from './query-selector';\n\n\n/**\n * Default query selector which used by default.\n *\n * Use them as a base if you want to write custom query selector.\n *\n * @example\n *\n * function customQuerySelector(tree, selector) {\n *   const modifiedSelector = modifySelector(selector);\n *\n *   return querySelector(tree, modifiedSelector);\n * }\n *\n * @constant querySelector\n * @type QuerySelector\n *\n * @public\n * @since 0.4.1\n */\nexport { querySelector };\n\n/**\n * Creates application instance.\n *\n * @example\n *\n * const application = createApplication();\n *\n * application.component('.example', {\n *   // ...\n * });\n *\n * @param {?ApplicationOptions} options - application options.\n *\n * @return {module:application~Application} created application instance.\n *\n * @public\n * @since 0.5.0\n */\nexport function createApplication(options) {\n  return new Application(options);\n}\n\n/**\n * Creates {@link module:plugin~Plugin} factory with given name and initializer.\n *\n * Initializer used for transportation arguments to transformation function if\n * needed.\n *\n * @example\n *\n * const plugin = createPlugin('awesome-plugin', function initializer() {\n *   return function transform(component, element) {\n *     // transform component here\n *   }\n * });\n *\n * const application = create({ plugins: [plugin] });\n *\n * @example\n *\n * const factory = createPlugin('awesome-plugin', function initializer(...args) {\n *   return function transform(component, element) {\n *     // `args` available here\n *   };\n * });\n *\n * const plugin = factory(\n *   // your awesome arguments here\n * );\n *\n * const application = createApplication({ plugins: [plugin] });\n *\n * @param {String} name - plugin's name.\n * @param {PluginInitializationFn} initializer - add description.\n *\n * @return {PluginFactoryFn} plugin's factory.\n *\n * @public\n * @since 0.5.0\n */\nexport function createPlugin(name, initializer) {\n  return function factory(...args) {\n    return new Plugin(name, initializer(...args));\n  };\n}\n"],"names":["this","const","let"],"mappings":"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"}